Aplicação Node.js com Docker e MongoDB
Esta é uma aplicação Node.js simples que utiliza Docker para containerização e MongoDB como banco de dados. A aplicação é uma lista de tarefas básica, permitindo que os usuários obtenham todas as tarefas armazenadas no banco de dados.

Pré-requisitos
Antes de executar a aplicação, certifique-se de ter as seguintes ferramentas instaladas em seu sistema:

Docker: https://www.docker.com/get-started
Node.js: https://nodejs.org (versão 14.x recomendada)
MongoDB: Certifique-se de que o MongoDB esteja em execução e acessível pela aplicação.
Instalação e Execução
Siga os passos abaixo para configurar e executar a aplicação:

Clone este repositório em seu ambiente local:
bash
Copy code
git clone https://github.com/seu-usuario/node-docker-mongo.git
cd node-docker-mongo
Instale as dependências do Node.js:
bash
Copy code
npm install
Execute a aplicação sem Docker (opcional):
bash
Copy code
npm start
Isso executará a aplicação diretamente no seu ambiente local sem utilizar o Docker.

(Opcional) Configuração do banco de dados MongoDB:
Se você estiver usando uma instância local do MongoDB, certifique-se de que o MongoDB esteja em execução e acessível em mongodb://localhost:27017/tasks. Caso esteja usando uma instância remota do MongoDB, ajuste a string de conexão no arquivo server.js.

Construa e execute a aplicação com Docker:
bash
Copy code
docker build -t node-docker-mongo .
docker run -p 3000:3000 --name node-app --link mongodb:mongo node-docker-mongo
Isso construirá a imagem Docker da aplicação e executará um contêiner mapeando a porta 3000 do contêiner para a porta 3000 do host.

Acesse a aplicação:
A aplicação estará disponível em http://localhost:3000/tasks. Você pode usar um navegador ou uma ferramenta de API como o Postman para acessar essa rota e obter todas as tarefas armazenadas no banco de dados.

Estrutura do Projeto
Dockerfile: Arquivo de configuração para criar a imagem Docker da aplicação.
package.json: Arquivo de configuração do Node.js com as dependências e scripts.
server.js: Código principal da aplicação Node.js.
node_modules: Pasta contendo as dependências do Node.js (gerada após a instalação).
package-lock.json: Arquivo de bloqueio de versões do Node.js (gerado após a instalação).
Recursos Adicionais
Node.js
Express.js
MongoDB
Docker
Contribuindo
Se você quiser contribuir com melhorias, correções de bugs ou novos recursos, fique à vontade para abrir um pull request neste repositório.

Licença
Este projeto está licenciado sob a MIT License. Sinta-se à vontade para usá-lo e modificá-lo de acordo com suas necessidades.
